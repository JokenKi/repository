// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `QueryParam.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.joken.common.rpc;

/**
 * 乐栈优鲜定义查询条件
 **/
public class WhereModel implements java.lang.Cloneable, java.io.Serializable
{
    public String field;

    public String
    getField()
    {
        return field;
    }

    public void
    setField(String _field)
    {
        field = _field;
    }

    public String expression;

    public String
    getExpression()
    {
        return expression;
    }

    public void
    setExpression(String _expression)
    {
        expression = _expression;
    }

    public String value;

    public String
    getValue()
    {
        return value;
    }

    public void
    setValue(String _value)
    {
        value = _value;
    }

    public WhereModel()
    {
        field = "";
        expression = "";
        value = "";
    }

    public WhereModel(String field, String expression, String value)
    {
        this.field = field;
        this.expression = expression;
        this.value = value;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        WhereModel _r = null;
        if(rhs instanceof WhereModel)
        {
            _r = (WhereModel)rhs;
        }

        if(_r != null)
        {
            if(field != _r.field)
            {
                if(field == null || _r.field == null || !field.equals(_r.field))
                {
                    return false;
                }
            }
            if(expression != _r.expression)
            {
                if(expression == null || _r.expression == null || !expression.equals(_r.expression))
                {
                    return false;
                }
            }
            if(value != _r.value)
            {
                if(value == null || _r.value == null || !value.equals(_r.value))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::joken::common::rpc::WhereModel");
        __h = IceInternal.HashUtil.hashAdd(__h, field);
        __h = IceInternal.HashUtil.hashAdd(__h, expression);
        __h = IceInternal.HashUtil.hashAdd(__h, value);
        return __h;
    }

    public WhereModel
    clone()
    {
        WhereModel c = null;
        try
        {
            c = (WhereModel)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(field);
        __os.writeString(expression);
        __os.writeString(value);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        field = __is.readString();
        expression = __is.readString();
        value = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, WhereModel __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public WhereModel
    __read(IceInternal.BasicStream __is, WhereModel __v)
    {
        if(__v == null)
        {
             __v = new WhereModel();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final WhereModel __nullMarshalValue = new WhereModel();

    public static final long serialVersionUID = -1406034738L;
}
