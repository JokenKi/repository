<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!-- bean工厂配置 -->
	<bean id="SpringContextUtil" class="com.jpgk.base.spring.SpringContextUtil" />
	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="LZ517-SOA" />

	<!-- 使用redis注册中心暴露服务地址 -->
	<dubbo:registry address="zookeeper://127.0.0.1:2181"
		check="false" />
	<!--<dubbo:registry address="redis://127.0.0.1:6379" /> -->

	<!-- 用dubbo协议在20880端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="20880" />

	<!-- 扫描注解包路径，多个包用逗号分隔，不填pacakge表示扫描当前ApplicationContext中所有的类 -->
	<dubbo:annotation/>

	<!-- 自动扫描 -->
	<context:annotation-config />
	<context:component-scan base-package="com.jpgk">
	</context:component-scan>

	<bean id="threadPool"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="8" />
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="1000" />
		<!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="500" />
		<!-- 线程池维护线程所允许的空闲时间 ，单位秒 -->
		<property name="keepAliveSeconds" value="120" />
		<!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
		<property name="rejectedExecutionHandler">
			<!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 
				CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 
				DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
		<!-- 关闭时是否等待任务执行完成，但这里要是有循环任务如何处理？ -->
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
	</bean>

	<aop:aspectj-autoproxy proxy-target-class="true">
		<aop:include name="cacheableAop" />
	</aop:aspectj-autoproxy>
	<bean id="cacheableAop" class="com.jpgk.base.spring.aop.CacheableAop" />

	<!-- 设置缓存操作工厂 -->
	<bean id="CacheInstance" class="com.jpgk.lz517.common.cache.CacheInstanceFactory" />

	<!-- 引入jdbc配置 -->
	<import resource="classpath:spring/applicationContext-jdbc.xml" />

	<!-- 引入mybatis配置 -->
	<import resource="classpath:spring/applicationContext-mybatis.xml" />
	<import resource="classpath:spring/applicationContext-lz517.xml" />

	<!-- 引入redis配置 -->
	<import resource="classpath:spring/applicationContext-redis.xml" />

	<!-- 引入mybatis配置 -->
	<!-- <import resource="classpath:spring/applicationContext-dubbo.xml" /> -->

	<!-- 其他bean扩展配置 -->
	<import resource="classpath:spring/applicationContext-bean.xml" />
</beans>