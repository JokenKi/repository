<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
               http://www.springframework.org/schema/context
               http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/tx
               http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
               http://www.springframework.org/schema/aop
               http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                http://www.springframework.org/schema/mvc
   				 http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
               ">
	<context:annotation-config />
	<context:component-scan base-package="com.jpgk" />
	<bean id="threadPool"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="8" />
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="1000" />
		<!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="500" />
		<!-- 线程池维护线程所允许的空闲时间 ，单位秒 -->
		<property name="keepAliveSeconds" value="120" />
		<!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
		<property name="rejectedExecutionHandler">
			<!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 
				CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 
				DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
		<!-- 关闭时是否等待任务执行完成，但这里要是有循环任务如何处理？ -->
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
	</bean>

	<!-- 引入dubbo配置 -->
	<!-- <import resource="classpath:spring/applicationContext-dubbo.xml" /> -->
	
	<import resource="classpath:timer/test.xml" />
</beans>