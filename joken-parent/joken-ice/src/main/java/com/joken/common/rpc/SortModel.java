// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `QueryParam.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.joken.common.rpc;

/**
 * 乐栈优鲜定义排序条件
 **/
public class SortModel implements java.lang.Cloneable, java.io.Serializable
{
    public String field;

    public String
    getField()
    {
        return field;
    }

    public void
    setField(String _field)
    {
        field = _field;
    }

    public String type;

    public String
    getType()
    {
        return type;
    }

    public void
    setType(String _type)
    {
        type = _type;
    }

    /**
     * 排序Map变量,key对应model属性,value为排序方式(desc or asc)
     *
     **/
    public java.util.Map<java.lang.String, java.lang.String> sortMap;

    /**
     * 排序Map变量,key对应model属性,value为排序方式(desc or asc)
     *
     **/
    public java.util.Map<java.lang.String, java.lang.String>
    getSortMap()
    {
        return sortMap;
    }

    /**
     * 排序Map变量,key对应model属性,value为排序方式(desc or asc)
     *
     **/
    public void
    setSortMap(java.util.Map<java.lang.String, java.lang.String> _sortMap)
    {
        sortMap = _sortMap;
    }

    public SortModel()
    {
        field = "";
        type = "";
    }

    public SortModel(String field, String type, java.util.Map<java.lang.String, java.lang.String> sortMap)
    {
        this.field = field;
        this.type = type;
        this.sortMap = sortMap;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        SortModel _r = null;
        if(rhs instanceof SortModel)
        {
            _r = (SortModel)rhs;
        }

        if(_r != null)
        {
            if(field != _r.field)
            {
                if(field == null || _r.field == null || !field.equals(_r.field))
                {
                    return false;
                }
            }
            if(type != _r.type)
            {
                if(type == null || _r.type == null || !type.equals(_r.type))
                {
                    return false;
                }
            }
            if(sortMap != _r.sortMap)
            {
                if(sortMap == null || _r.sortMap == null || !sortMap.equals(_r.sortMap))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::com::joken::common::rpc::SortModel");
        __h = IceInternal.HashUtil.hashAdd(__h, field);
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, sortMap);
        return __h;
    }

    public SortModel
    clone()
    {
        SortModel c = null;
        try
        {
            c = (SortModel)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(field);
        __os.writeString(type);
        SortMapHelper.write(__os, sortMap);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        field = __is.readString();
        type = __is.readString();
        sortMap = SortMapHelper.read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, SortModel __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public SortModel
    __read(IceInternal.BasicStream __is, SortModel __v)
    {
        if(__v == null)
        {
             __v = new SortModel();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final SortModel __nullMarshalValue = new SortModel();

    public static final long serialVersionUID = -1413350946L;
}
