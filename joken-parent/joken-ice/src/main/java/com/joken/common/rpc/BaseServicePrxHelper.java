// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `BaseService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.joken.common.rpc;

/**
 * 公用接口，这里定义RPC调用都会定义的方法。
 *
 **/
public final class BaseServicePrxHelper extends Ice.ObjectPrxHelperBase implements BaseServicePrx
{
    public static BaseServicePrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), BaseServicePrx.class, BaseServicePrxHelper.class);
    }

    public static BaseServicePrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), BaseServicePrx.class, BaseServicePrxHelper.class);
    }

    public static BaseServicePrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), BaseServicePrx.class, BaseServicePrxHelper.class);
    }

    public static BaseServicePrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), BaseServicePrx.class, BaseServicePrxHelper.class);
    }

    public static BaseServicePrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, BaseServicePrx.class, BaseServicePrxHelper.class);
    }

    public static BaseServicePrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, BaseServicePrx.class, BaseServicePrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::com::joken::common::rpc::BaseService"
    };

    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, BaseServicePrx v)
    {
        __os.writeProxy(v);
    }

    public static BaseServicePrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            BaseServicePrxHelper result = new BaseServicePrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
